/*----------------------------------------------------------------------------*/
/* Copyright (c) 2018 FIRST. All Rights Reserved.                             */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

package frc.robot.commands.arm;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import frc.robot.Robot;

public class MoveArmPosCommand extends Command {
  private double m_deg;
  private double k_error = 2;
  private boolean m_final = false;
  public MoveArmPosCommand(double deg, boolean finalRobot) {
    requires(Robot.m_armSubsystem);

    m_deg = deg;
    m_final = finalRobot;
  }

  // Called just before this Command runs the first time
  @Override
  protected void initialize() {
    if((Math.abs(Robot.m_intakeSubsystem.getAngle() - 90) < 20)){
      if(Math.abs(m_deg) < 10){
        if(m_final){
          Robot.m_armSubsystem.setPosFinal(m_deg);
        }else{
          Robot.m_armSubsystem.setPos(m_deg);
        }
        Robot.m_armSubsystem.setStall(false);
      }
    }else{
      if(m_final){
        Robot.m_armSubsystem.setPosFinal(m_deg);
      }else{
        Robot.m_armSubsystem.setPos(m_deg);
      }
      Robot.m_armSubsystem.setStall(false);
    }
  }

  // Called repeatedly when this Command is scheduled to run
  @Override
  protected void execute() {
  }

  // Make this return true when this Command no longer needs to run execute()
  @Override
  protected boolean isFinished() {
    boolean reached = false;
    if(m_final){
      // System.out.println(String.format("Cur Angle: %f, Set Point: %f", Robot.m_armSubsystem.getAngleFinal(), m_deg));
      reached = Math.abs(Robot.m_armSubsystem.getAngleFinal() - m_deg) <= k_error;
    }else{
      reached = Math.abs(Robot.m_armSubsystem.getAngle() - m_deg) <= k_error;
    }

    // SmartDashboard.putBoolean("Reached", reached);
    return reached;
  }

  // Called once after isFinished returns true
  @Override
  protected void end() {
    // System.out.println("Arm Ended");
    Robot.m_armSubsystem.stop();

    Robot.m_armSubsystem.setStall(true);
  }
}
